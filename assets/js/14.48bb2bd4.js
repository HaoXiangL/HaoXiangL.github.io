(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{214:function(e,t,v){"use strict";v.r(t);var s=v(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"vue-js-是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue-js-是什么"}},[e._v("#")]),e._v(" Vue.js 是什么")]),e._v(" "),v("p",[e._v("引用官网的解释")]),e._v(" "),v("blockquote",[v("p",[e._v("Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的"),v("strong",[e._v("渐进式框架")]),e._v("。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。"),v("em",[v("strong",[e._v("Vue 的核心库只关注视图层")])]),e._v("，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。")])]),e._v(" "),v("p",[e._v("如果要我用一句话总结：Vue是一个渐进式的mvvm框架,解放传统的重复dom操作,由"),v("strong",[e._v("数据驱动")]),e._v("思想去实现响应式(Reactive)。开发者只需关注数据的变动而不需要关心dom的变化,虚拟dom(virtual dom)的diff方法能高效的更新数据变动,减少实体dom操作从而达到性能提升。")]),e._v(" "),v("h2",{attrs:{id:"为什么要使用vue"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用vue"}},[e._v("#")]),e._v(" 为什么要使用Vue")]),e._v(" "),v("p",[e._v("相对于"),v("strong",[e._v("Anglar/React")]),e._v(",Vue更加容易入手,它的渐进式思想使得新手开发时可以在按需的情况下构建自己的项目,而Vue的中文文档得天独厚,成为大多数国内开发者的一个救命稻草(比如不会英语的我)")])])}),[],!1,null,null,null);t.default=r.exports}}]);